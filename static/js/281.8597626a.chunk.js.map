{"version":3,"file":"static/js/281.8597626a.chunk.js","mappings":"ySACMA,EAAM,mCACNC,EAAW,+BAEJC,EAAc,mCAAG,sGACLC,MAAM,GAAD,OAAIF,EAAJ,sCAA0CD,IAD1C,cACtBI,EADsB,gBAEPA,EAASC,OAFF,cAEtBC,EAFsB,yBAGrBA,GAHqB,2CAAH,qDAMdC,EAAW,mCAAG,WAAMC,GAAN,yFACFL,MAAM,GAAD,OACvBF,EADuB,iCACUD,EADV,kBACuBQ,EADvB,oBADH,cACnBJ,EADmB,gBAIJA,EAASC,OAJL,cAInBC,EAJmB,yBAKlBA,GALkB,2CAAH,sDAQXG,EAAkB,mCAAG,WAAMC,GAAN,yFACTP,MAAM,GAAD,OACvBF,EADuB,kBACLS,EADK,oBACSV,EADT,oBADI,cAC1BI,EAD0B,gBAIXA,EAASC,OAJE,cAI1BC,EAJ0B,yBAKzBA,GALyB,2CAAH,sDAQlBK,EAAS,mCAAG,WAAMD,GAAN,yFACAP,MAAM,GAAD,OACvBF,EADuB,kBACLS,EADK,4BACiBV,EADjB,oBADL,cACjBI,EADiB,gBAIFA,EAASC,OAJP,cAIjBC,EAJiB,yBAKhBA,GALgB,2CAAH,sDAQTM,EAAY,mCAAG,WAAMF,GAAN,yFACHP,MAAM,GAAD,OACvBF,EADuB,kBACLS,EADK,4BACiBV,IAFnB,cACpBI,EADoB,gBAILA,EAASC,OAJJ,cAIpBC,EAJoB,yBAKnBA,GALmB,2CAAH,qD,sECjCZO,E,QAAUC,GAAAA,IAAH,0B,mBCEPC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,0GCbYC,EAAYP,EAAAA,GAAAA,IAAH,wLASTQ,EAAcR,EAAAA,GAAAA,IAAH,sHAOXS,EAAaT,EAAAA,GAAAA,GAAH,mGAOVU,EAAQV,EAAAA,GAAAA,IAAH,6H,sCCpBH,SAASW,EAAT,GAAiC,IAAXnB,EAAU,EAAVA,OAC7BoB,GAAWC,EAAAA,EAAAA,MAGjB,OADAC,QAAQC,IAAIvB,IAEV,SAACe,EAAD,UACGf,EAAOwB,KAAI,gBAAGpB,EAAH,EAAGA,GAAIqB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,YAApB,OACV,SAACX,EAAD,WACE,UAAC,KAAD,CAAMY,GAAE,kBAAaxB,GAAMyB,MAAO,CAAEC,KAAMV,GAA1C,WACE,SAACF,EAAD,CACEa,IACEJ,EAAW,2DAC6CA,GACpDK,EAENC,IAAKR,KAEP,SAACR,EAAD,UAAaQ,GAASC,QAVRtB,EADR,KAiBjB,CAEDe,EAAWe,UAAY,CACrBlC,OAAQmC,IAAAA,QACNA,IAAAA,MAAgB,CACd/B,GAAI+B,IAAAA,OACJV,MAAOU,IAAAA,OACPT,KAAMS,IAAAA,OACNR,YAAaQ,IAAAA,U,gKCnCNpB,EAAYP,EAAAA,GAAAA,IAAH,udAmBT4B,EAAO5B,EAAAA,GAAAA,KAAH,8KASJ6B,EAAS7B,EAAAA,GAAAA,OAAH,8UAiBN8B,EAAQ9B,EAAAA,GAAAA,KAAH,6MAWL+B,EAAQ/B,EAAAA,GAAAA,MAAH,wL,SCrDH,SAASgC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOxC,EAAP,KAAcyC,EAAd,KAaMC,EAAY,WAChBD,EAAS,GACV,EAOD,OACE,SAAC5B,EAAD,WACE,UAACqB,EAAD,CAAMK,SAtBW,SAAAI,GAEnB,GADAA,EAAEC,iBACmB,KAAjB5C,EAAM6C,OACR,OAAOC,MAAM,4BAIfP,EAASvC,GACT0C,GACD,EAaG,WACE,UAACP,EAAD,CAAQY,KAAK,SAAb,WACE,SAAC,MAAD,CAAUC,KAAK,OAAOC,MAAM,WAC5B,SAACb,EAAD,yBAEF,SAACC,EAAD,CAAOU,KAAK,OAAOvB,KAAK,OAAO0B,MAAOlD,EAAOmD,SAZ/B,SAAAR,GAClB,IAAMS,EAAaT,EAAEU,cAAcH,MACnCT,EAASW,EAAWE,cACrB,QAaF,C,sDC9Bc,SAASC,IAAU,IAAD,EAC/B,GAA4Bf,EAAAA,EAAAA,UAAS,IAArC,eAAO1C,EAAP,KAAe0D,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCnB,EAAAA,EAAAA,WAAS,GAA3C,eAAOoB,EAAP,KAAkBC,EAAlB,KACMC,EAAS,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,IAE/CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,yFACI,KAAdH,EADU,wDAIdD,GAAa,GAJC,mBAMc9D,EAAAA,EAAAA,IAAY+D,GAN1B,gBAOW,KADfI,EANI,EAMJA,SACIC,OACVX,EAAUU,GAEVE,EAAAA,OAAAA,QAAA,iBAAyBN,EAAzB,kBAVU,kDAaZ1C,QAAQC,IAAI,KAAMgD,SAbN,yBAeZR,GAAa,GAfD,6EAAH,qDAkBbI,GACD,GAAE,CAACH,IAMJ,OACE,iCACE,SAACxB,EAAD,CAAWC,SANU,SAAAvC,GACvB2D,EAAgB,CAAE3D,MAAOA,GAC1B,IAKI4D,IAAa,SAACrD,EAAA,EAAD,IACbT,IAAU,SAACmB,EAAA,EAAD,CAAYnB,OAAQA,MAGpC,C","sources":["api/Api.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["// import axios from 'axios';\nconst KEY = '022c68239ef1f98dfe9e02a4549079c6';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const trendingMovies = async () => {\n  const response = await fetch(`${BASE_URL}/trending/all/week?api_key=${KEY}`);\n  const movies = await response.json();\n  return movies;\n};\n\nexport const searchMovie = async query => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  const movies = await response.json();\n  return movies;\n};\n\nexport const searchMovieDetails = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  const movies = await response.json();\n  return movies;\n};\n\nexport const castMovie = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  const movies = await response.json();\n  return movies;\n};\n\nexport const reviewMovies = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`\n  );\n  const movies = await response.json();\n  return movies;\n};\n","import styled from 'styled-components';\nexport const Spinner = styled.div`  \n`","import { Spinner } from './Loader.styled';\nimport { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Spinner>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </Spinner>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 280px);\n  gap: 16px;\n  list-style-type: none;\n  text-decoration: none;\n  padding-bottom: 10px;\n`;\n\nexport const CardWrapper = styled.div`\n  position: relative;\n  transition: 0.5s linear;\n  border-radius: 8px;\n  cursor: pointer;\n`;\n\nexport const MoviesName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 280px;\n  height: 360px;\n  border-radius: 8px;\n  margin-bottom: 10px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Container, CardWrapper, MoviesName, Image } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\nimport NoPoster from '../../images/No_poster _image.jpg';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n\n  console.log(movies);\n  return (\n    <Container>\n      {movies.map(({ id, title, name, poster_path }) => (\n        <CardWrapper key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              src={\n                poster_path\n                  ? `https://www.themoviedb.org/t/p/w220_and_h330_face${poster_path}`\n                  : NoPoster\n              }\n              alt={title}\n            />\n            <MoviesName>{title || name}</MoviesName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n}\n\nMoviesList.prototype = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\nexport const Container = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 1120px;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  hover {\n    opacity: 1;\n  }\n`;\n\nexport const Label = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n","import { useState } from 'react';\nimport { BsSearch } from 'react-icons/bs';\nimport { Container, Form, Button, Label, Input } from './Searchbar.styled';\n\nexport default function SearchBar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return alert('Please enter youre query');\n    }\n    // const form = e.target;\n    // console.log(form.elements.name.value);\n    onSubmit(query);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setQuery('');\n  };\n\n  const handleQuery = e => {\n    const inputValue = e.currentTarget.value;\n    setQuery(inputValue.toLowerCase());\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Button type=\"submit\">\n          <BsSearch size=\"2rem\" color=\"black\" />\n          <Label>Search</Label>\n        </Button>\n        <Input type=\"text\" name=\"name\" value={query} onChange={handleQuery} />\n      </Form>\n    </Container>\n  );\n}\n","import SearchBar from 'components/Searchbar/Searchbar';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { searchMovie } from 'api/Api';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const doFetch = async () => {\n      if (movieName === '') {\n        return;\n      }\n      setIsLoading(true);\n      try {\n        const { results } = await searchMovie(movieName);\n        if (results.length !== 0) {\n          setMovies(results);\n        } else {\n          Notify.failure(`Movies ${movieName} is not found`);\n        }\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    doFetch();\n  }, [movieName]);\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query: query });\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={handleFormSubmit} />\n      {isLoading && <Loader />}\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n}\n"],"names":["KEY","BASE_URL","trendingMovies","fetch","response","json","movies","searchMovie","query","searchMovieDetails","id","castMovie","reviewMovies","Spinner","styled","Loader","strokeColor","strokeWidth","animationDuration","width","visible","Container","CardWrapper","MoviesName","Image","MoviesList","location","useLocation","console","log","map","title","name","poster_path","to","state","from","src","NoPoster","alt","prototype","PropTypes","Form","Button","Label","Input","SearchBar","onSubmit","useState","setQuery","resetForm","e","preventDefault","trim","alert","type","size","color","value","onChange","inputValue","currentTarget","toLowerCase","Movies","setMovies","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","movieName","get","useEffect","doFetch","results","length","Notify","message"],"sourceRoot":""}