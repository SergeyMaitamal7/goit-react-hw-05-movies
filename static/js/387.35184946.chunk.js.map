{"version":3,"file":"static/js/387.35184946.chunk.js","mappings":"ySACMA,EAAM,mCACNC,EAAW,+BAEJC,EAAc,mCAAG,sGACLC,MAAM,GAAD,OAAIF,EAAJ,sCAA0CD,IAD1C,cACtBI,EADsB,gBAEPA,EAASC,OAFF,cAEtBC,EAFsB,yBAGrBA,GAHqB,2CAAH,qDAMdC,EAAW,mCAAG,WAAMC,GAAN,yFACFL,MAAM,GAAD,OACvBF,EADuB,iCACUD,EADV,kBACuBQ,EADvB,oBADH,cACnBJ,EADmB,gBAIJA,EAASC,OAJL,cAInBC,EAJmB,yBAKlBA,GALkB,2CAAH,sDAQXG,EAAkB,mCAAG,WAAMC,GAAN,yFACTP,MAAM,GAAD,OACvBF,EADuB,kBACLS,EADK,oBACSV,EADT,oBADI,cAC1BI,EAD0B,gBAIXA,EAASC,OAJE,cAI1BC,EAJ0B,yBAKzBA,GALyB,2CAAH,sDAQlBK,EAAS,mCAAG,WAAMD,GAAN,yFACAP,MAAM,GAAD,OACvBF,EADuB,kBACLS,EADK,4BACiBV,EADjB,oBADL,cACjBI,EADiB,gBAIFA,EAASC,OAJP,cAIjBC,EAJiB,yBAKhBA,GALgB,2CAAH,sDAQTM,EAAY,mCAAG,WAAMF,GAAN,yFACHP,MAAM,GAAD,OACvBF,EADuB,kBACLS,EADK,4BACiBV,IAFnB,cACpBI,EADoB,gBAILA,EAASC,OAJJ,cAIpBC,EAJoB,yBAKnBA,GALmB,2CAAH,qD,wKChCZO,EAAcC,EAAAA,GAAAA,GAAH,qIAMXC,EAAYD,EAAAA,GAAAA,GAAH,yCAGTE,EAAQF,EAAAA,GAAAA,IAAH,sBACLG,EAAOH,EAAAA,GAAAA,GAAH,mG,mBCNF,SAASI,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,QAAQC,IAAIH,GACZ,OAAwBI,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,GAbAJ,QAAQC,IAAIE,IAEZE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,8GAEUhB,EAAAA,EAAAA,IAAUQ,GAFpB,OAENS,EAFM,OAGZH,EAAQG,EAAQJ,MAHJ,gDAKZH,QAAQC,IAAI,KAAMO,SALN,yDAAH,qDAQbF,GACD,GAAE,IACEH,EACL,OACE,gCACG,KACD,UAACX,EAAD,WACGW,EAAKM,KAAI,gBAAGpB,EAAH,EAAGA,GAAIqB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAb,OACR,UAACjB,EAAD,YACE,SAACC,EAAD,CACEiB,IACED,EAAY,2DAC4CA,GACpDE,EAENC,IAAKJ,EACLK,MAAM,SAER,SAACnB,EAAD,UAAOc,MAVOrB,EADR,IAaN,SAIX,C,oHC7CD,SAAS2B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["api/Api.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// import axios from 'axios';\nconst KEY = '022c68239ef1f98dfe9e02a4549079c6';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const trendingMovies = async () => {\n  const response = await fetch(`${BASE_URL}/trending/all/week?api_key=${KEY}`);\n  const movies = await response.json();\n  return movies;\n};\n\nexport const searchMovie = async query => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  const movies = await response.json();\n  return movies;\n};\n\nexport const searchMovieDetails = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  const movies = await response.json();\n  return movies;\n};\n\nexport const castMovie = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  const movies = await response.json();\n  return movies;\n};\n\nexport const reviewMovies = async id => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`\n  );\n  const movies = await response.json();\n  return movies;\n};\n","import styled from 'styled-components';\n\nexport const CardWrapper = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 106px);\n  gap: 16px;\n  list-style-type: none;\n`;\nexport const CardMovie = styled.li`\n  padding: 5px;\n`;\nexport const Image = styled.img``;\nexport const Name = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { castMovie } from 'api/Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CardWrapper, CardMovie, Image, Name } from './Cast.styled';\nimport NoImage from '../../images/No_poster _image.jpg';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  console.log(movieId);\n  const [cast, setCast] = useState(null);\n  console.log(cast);\n\n  useEffect(() => {\n    const doFetch = async () => {\n      try {\n        const results = await castMovie(movieId);\n        setCast(results.cast);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    doFetch();\n  }, []);\n  if (!cast) return;\n  return (\n    <>\n      {' '}\n      <CardWrapper>\n        {cast.map(({ id, name, profile_path }) => (\n          <CardMovie key={id}>\n            <Image\n              src={\n                profile_path\n                  ? `https://www.themoviedb.org/t/p/w138_and_h175_face${profile_path}`\n                  : NoImage\n              }\n              alt={name}\n              width=\"120\"\n            />\n            <Name>{name}</Name>\n          </CardMovie>\n        ))}{' '}\n      </CardWrapper>\n    </>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["KEY","BASE_URL","trendingMovies","fetch","response","json","movies","searchMovie","query","searchMovieDetails","id","castMovie","reviewMovies","CardWrapper","styled","CardMovie","Image","Name","Cast","movieId","useParams","console","log","useState","cast","setCast","useEffect","doFetch","results","message","map","name","profile_path","src","NoImage","alt","width","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}